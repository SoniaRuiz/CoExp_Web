#pragma checksum "\\ad.ucl.ac.uk\home0\skgtsg0\Documents\GitHub\CoExp_Web\Views\Run\Help_Catalog.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "feed3432616ba8178803ecab0334a8102f6e7b9c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Run_Help_Catalog), @"mvc.1.0.view", @"/Views/Run/Help_Catalog.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Run/Help_Catalog.cshtml", typeof(AspNetCore.Views_Run_Help_Catalog))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "\\ad.ucl.ac.uk\home0\skgtsg0\Documents\GitHub\CoExp_Web\Views\_ViewImports.cshtml"
using CoExp_Web;

#line default
#line hidden
#line 2 "\\ad.ucl.ac.uk\home0\skgtsg0\Documents\GitHub\CoExp_Web\Views\_ViewImports.cshtml"
using CoExp_Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"feed3432616ba8178803ecab0334a8102f6e7b9c", @"/Views/Run/Help_Catalog.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"999153e3f062e8fedf186436238d7f4cf3822629", @"/Views/_ViewImports.cshtml")]
    public class Views_Run_Help_Catalog : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-area", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Run", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Help", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Help_Introduction", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/category.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Available categories"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Fig1: Available categories."), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/gtexv6.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Available networks under GTExV6"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Fig2: Available networks under GTExV6."), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/caudate.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("\'By Ontology\' visualisation of the Caudate network"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Fig3: \'By Ontology\' visualisation of the Caudate network"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/rnaprocessing.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Modules in the Caudate related to RNA processing in any way"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Fig4: Modules in the Caudate related to RNA processing in any way."), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/microglia.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Modules in the Caudate specific to microglial cell type"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Fig5: Modules in the Caudate specific to microglial cell type."), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/cyan.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("REACTOME terms in the cyan module"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Fig6: REACTOME terms in the cyan module."), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/pink.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("REACTOME terms in the pink module"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Fig7: REACTOME terms in the pink module."), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/dopa.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_26 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Modules in Caudate related with dopaminergic neurons"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_27 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Fig8: Modules in Caudate related with dopaminergic neurons."), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_28 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Help_Annotation", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "\\ad.ucl.ac.uk\home0\skgtsg0\Documents\GitHub\CoExp_Web\Views\Run\Help_Catalog.cshtml"
  
    ViewData["Title"] = "Help - Catalog";

#line default
#line hidden
            BeginContext(52, 28, true);
            WriteLiteral("\r\n<div class=\"breadcrumb\">\r\n");
            EndContext();
#line 7 "\\ad.ucl.ac.uk\home0\skgtsg0\Documents\GitHub\CoExp_Web\Views\Run\Help_Catalog.cshtml"
     if (ViewContext.RouteData.Values["controller"].ToString() != "Home")
    {

#line default
#line hidden
            BeginContext(162, 184, true);
            WriteLiteral("        <span class=\"main-label-breadcrumbs\">CoExp</span>\r\n        <span class=\"glyphicon glyphicon-chevron-right\"></span>\r\n        <span class=\"active\">Help - Network Catalog</span>\r\n");
            EndContext();
#line 12 "\\ad.ucl.ac.uk\home0\skgtsg0\Documents\GitHub\CoExp_Web\Views\Run\Help_Catalog.cshtml"
    }

#line default
#line hidden
            BeginContext(353, 627, true);
            WriteLiteral(@"</div>
<div class=""row"">
    <div class=""col-sm-11 about"">
        <h2>Surfing the catalog</h2>
        <small>Created: April 04, 2019<br />Last updated: November 22, 2019</small>
        <p class=""author"">
            by <a href=""http://www.rytenlab.com/RytenLab/MemberInfo?Id=BP98-F74160"" target=""_blank"" title=""Juan A. Botía"">Juan A. Botía</a> and
            <a href=""http://www.rytenlab.com/RytenLab/MemberInfo?Id=LO96_F34158"" target=""_blank"" title=""Sonia García-Ruiz"">Sonia García-Ruiz</a>
        </p>
        <hr class=""menu-hr"" />
        <div>
            <p>This is the second part of the tutorial series ");
            EndContext();
            BeginContext(980, 106, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "11951c89c9754d34adbba08f3541ace0", async() => {
                BeginContext(1034, 48, true);
                WriteLiteral("\"Getting started with CoExp WebPage application\"");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Area = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1086, 93, true);
            WriteLiteral(".</p>\r\n            <p><span class=\"glyphicon glyphicon-chevron-left\"></span><b>Previous: </b>");
            EndContext();
            BeginContext(1179, 83, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "be1e1ff36344436a9f71c5e27218a844", async() => {
                BeginContext(1246, 12, true);
                WriteLiteral("Introduction");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Area = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1262, 148, true);
            WriteLiteral("</p>\r\n\r\n            <h3><a id=\"surfing\" style=\"color:black;\">Surfing the catalog</a></h3>\r\n            <p>\r\n                As we introduced in the ");
            EndContext();
            BeginContext(1410, 79, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b14778fbf5bf47cf929dc997cdc1b08b", async() => {
                BeginContext(1477, 8, true);
                WriteLiteral("previous");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Area = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1489, 530, true);
            WriteLiteral(@" tutorial, in this example we would like to annotate a list of genes
                composed by the monogenic forms of Parkinson disease, which have been obtained from the Genomics England panel App (only the green genes). Thus, firstly we will move into the tab ""Network Catalog"".
                Secondly, we will check the different categories available within the dropdown menu 'Categories', which is placed in the left-hand side section of the webpage:
            </p>
            <div class=""figure"">
                ");
            EndContext();
            BeginContext(2019, 120, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "1b7aa4e82a2c4c6ab17394ca4fc0de30", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2139, 3404, true);
            WriteLiteral(@"
                <p><small class=""help_caption"">Fig1: All available categories.</small></p>
            </div>
            <p>If everything has gone as expected, the following list of categories should be now displayed within the 'Categories' dropdown:</p>
            <table class=""table table-striped table-bordered table-responsive"">
                <thead>
                    <tr>
                        <th scope=""col"">Category</th>
                        <th scope=""col"">Description</th>
                        <th scope=""col"">GitHub</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <th scope=""row"">ROSMAP</th>
                        <td>
                            This category is composed by four networks (all samples, not AD, probable AD and AD) obtained from Frontal Cortex samples. For any further information, please visit
                            <a href=""https://www.synapse.org/#!Synapse:syn3219045"" t");
            WriteLiteral(@"arget=""_blank"" title=""Visit 'ROSMAP' project"">this</a> link.
                        </td>
                        <td><a href=""http://github.com/juanbot/CoExpROSMAP"" class=""uri"" target=""_blank"" title=""Visit 'CoExpROSMAP' GitHub repository"">http://github.com/juanbot/CoExpROSMAP</a></td>
                    </tr>
                    <tr>
                        <th scope=""row"">GTEx V6</th>
                        <td>It containes 47 co-expression networks on control tissue, including 13 brain areas.</td>
                        <td><a href=""http://github.com/juanbot/CoExpGTEx"" class=""uri"" target=""_blank"" title=""Visit 'CoExpGTEx' GitHub repository"">http://github.com/juanbot/CoExpGTEx</a></td>
                    </tr>
                    <tr>
                        <th scope=""row"">10UKBEC</th>
                        <td>These are 10 Illumina microarray based gene expression profiling networks from brain tissue</td>
                        <td><a href=""http://github.com/juanbot/CoExp10UKBEC"" class=");
            WriteLiteral(@"""uri"" target=""_blank"" title=""Visit 'CoExp10UKBEC' GitHub repository"">http://github.com/juanbot/CoExp10UKBEC</a></td>
                    </tr>
                    <tr>
                        <th scope=""row"">GTEx V7</th>
                        <td>This category contains a beta version of the same GTExV6 47 co-expression networks.</td>
                        <td><a href=""http://github.com/juanbot/CoExpGTExV7"" class=""uri"" target=""_blank"" title=""Visit 'CoExpGTExV7' GitHub repository"">http://github.com/juanbot/CoExpGTExV7</a></td>
                    </tr>
                    <tr>
                        <th scope=""row"">NABEC</th>
                        <td>This category contains a gene co-expression network created from RNA-seq control Cortex samples, which have been quantified at transcript level with Salmon.</td>
                        <td><a href=""http://github.com/juanbot/CoExpNABEC"" class=""uri"" target=""_blank"" title=""Visit 'CoExpNABEC' GitHub repository"">http://github.com/juanbot/CoExpNABEC</a");
            WriteLiteral(@"></td>
                    </tr>
                </tbody>
            </table>

            <p>Let's select <b>gtexv6</b> category. The next thing we should be able to see, is the 'Network' dropdown field filled with the 47 GTEx tissues, as it's shown in the image below:</p>
            <div class=""figure"">
                ");
            EndContext();
            BeginContext(5543, 140, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "6e552c66e3d14f5b94d07b0d62fdeed0", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5683, 3541, true);
            WriteLiteral(@"
                <p><small class=""help_caption"">Fig2: Available networks after selecting GTExV6 category.</small></p>
            </div>

            <br /><h4><u>""BY ONTOLOGY"" tab</u></h4>
            <p>
                In this example, we are going to select the 'Caudate' tissue. After selecting it, the dropdown field 'Module Selection' should be now enabled and filled by two different options: ""By Ontology"" and ""By Cell Type"".
                Both options refer to two different ways of visualising the results. The ""By Ontology"" option, will generate a table showing the function annotation of the 'Caudate' genes. On the other hand, the ""By Cell Type""
                option, will generate a different table containing the cell type annotation of the genes within the 'Caudate' network.
                In terms of the ""By Ontology"" view, the generated table will contain the following set of columns:
            </p>
            <table class=""table table-striped table-bordered table-responsive"">
   ");
            WriteLiteral(@"             <thead>
                    <tr>
                        <th scope=""col"">Column name</th>
                        <th scope=""col"">Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <th scope=""row"">module</th>
                        <td>It contains the module, wihtin the selected network, that the annotation term obtained refers to.</td>
                    </tr>
                    <tr>
                        <th scope=""row"">p.value</th>
                        <td>
                            In order to annotate each gene within each module, CoExp R suit-of-packages has made use of the <a href=""https://biit.cs.ut.ee/gprofiler/gost"" target=""_blank"" title=""Link to visit gProfiler webpage"">gProfiler</a> tool.
                            This p-value column, therefore, refers to how significant is the overlap of genes associated to both the term and genes found in the current module.
        ");
            WriteLiteral(@"                </td>
                    </tr>
                    <tr>
                        <th scope=""row"">module.size</th>
                        <td>This column refers to the total number of genes found in the current module.</td>
                    </tr>
                    <tr>
                        <th scope=""row"">ontology</th>
                        <td>
                            This column contains the annotation ontology terms. They can refer to Biological Process (BP), Cellular Component (CC) and Molecular Function (MF) respectively.
                            All of them are subontologies from the <a href=""http://geneontology.org/"" target=""_blank"" title=""Link to visit the Gene Ontology project website"">Gene Ontology</a> project.
                            In addition, this column can also contain the terms ""rea"" and ""keg"", which refer to the <a href=""https://reactome.org/"" target=""_blank"" title=""Link to visit the REACTOME project website"">REACTOME</a>
                    ");
            WriteLiteral(@"        and <a href=""https://www.genome.jp/kegg/ko.html"" target=""_blank"" title=""Link to visit the KEGG project website"">KEGG</a> ontologies respectively.
                        </td>
                    </tr>
                </tbody>
            </table>

            <p>Next, after clicking the ""Accept"" button, a table - similar to the following one - will appear into the right-hand side of the webpage.</p>
            <div class=""figure"">
                ");
            EndContext();
            BeginContext(9224, 178, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "e1691d1b4a704f16b4a9783e63e11c8c", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9402, 1475, true);
            WriteLiteral(@"
                <p><small class=""help_caption"">Fig3: 'By Ontology' visualisation of the 'Caudate' network.</small></p>
            </div>
            <p>
                Please, notice the three buttons (""Copy"", ""Excel"" and ""Print"") placed in the upper part of the table. All of them will allow you to copy the content of the table to the clipboard,
                download that content into an excel file or send it to a printer.
            </p><br />

            <p>
                On the other hand, as you may have noticed, every co-expression network is composed by a set of modules.
                Each module, which is represented within the column ""module"", is named by one different color.
                In this sense, each color represents each cluster where the genes have been grouped in. In our particular example, we can see that the ""Caudate"" module has 3,914 annotations related to different functionality,
                which has been mainly obtained from the Gene Ontology, REACTOME a");
            WriteLiteral(@"nd KEGG pathways databases. <br /><br />
                Now, let us suppose that we want to obtain all terms related with ""RNA processing"". For that purpose, we can use the ""Search"" field, which is placed in the upper right-hand side of the table.
                After typing ""RNA processing"" in that field, we have obtained only 19 terms out of the 3914 total terms available.
            </p>
            <div class=""figure"">
                ");
            EndContext();
            BeginContext(10877, 203, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "39ca2cdae5d34a34823d36fd87142ea8", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(11080, 1941, true);
            WriteLiteral(@"
                <p><small class=""help_caption"">Fig4: Modules in the Caudate related to RNA processing in any way.</small></p>
            </div>
            <p>
                If we now focus on the results obtained above, we can see that the <b>darkred</b> module can be a good candidate for studying ""RNA processing"" within the ""Caudate"" tissue (its p-value is very significant).
                In addition, there are other modules hosting different terms. Note that we can order the terms by using the <b>ontology</b> column, so we can group them by the ontology they belong to.
                Also, on the left-hand side of each row, there is a green button with the <b>""+""</b> sign. If we click on it, we will get some extra information for the current row.
                The amount of the extra information showed, directly depends on the context of each row. But in any case, all genes appearing there, are the genes from the current module that are implicated on the
                overlap occurring b");
            WriteLiteral(@"etween that particular module and the ontology term.
            </p>


            <br /><h4><u>""BY CELL TYPE"" tab</u></h4>
            <p>
                Now, let us suppose that we are interested on finding only those modules that are specific to the ""microglia"". As we have selected to search not only by ontology but also by cell type,
                we can go to the ""By Cell Type"" tab, and use the ""Search"" pane to filter the table by the ""microglia"" term.
                In this case, the table ""By Cell Type"" returns the results of testing different marker sets (cell type markers particularly) against all modules.
                The values shown in the table, therefore, refer to the significance of each result obtained. Thus, the table will contain one column per each module studied and one row per each marker compared.
            </p>
            <div class=""figure"">
                ");
            EndContext();
            BeginContext(13021, 191, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "d2cb47bc5ea946b1b49f7981c57cd799", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(13212, 1288, true);
            WriteLiteral(@"
                <p><small class=""help_caption"">Fig5: Modules in the Caudate specific to microglial cell type.</small></p>
            </div>
            <p>
                And we can see <b>cyan</b>, <b>pink</b> and to a lesser extent <b>grey60</b>, show enrichment for microglial markers.
                All marker sets can be seen on the rows. Having modules as, for example, cyan with significant signals in more than 1 datasets, must be understood in the sense of having alternative
                evidences of similar phenomena. Apart from the significance reflected by the p-value (i.e. which comes from testing the significance of the overlap between the genes in the module and the genes in the marker set),
                the more signals related to microglia are significant, the more confident we should be about that.
                Note that in this case, we distinguish between deactivated (Type 1) and activated microglia (Type 2) in modules cyan and pink respectively.
                In that ");
            WriteLiteral(@"way, cyan and pink are reflecting different events of the same phenomena. Actually, if we now look at “By Ontology” by module names and order by ontology to get the REACTOME terms first, we get:
            </p>
            <div class=""figure"">
                ");
            EndContext();
            BeginContext(14500, 142, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "5a907bc3756b448393abfdb06a7bf989", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14642, 239, true);
            WriteLiteral("\r\n                <p><small class=\"help_caption\">Fig6: REACTOME terms in the cyan module.</small></p>\r\n            </div>\r\n            <p>On the other hand, for the pink term we have:</p>\r\n            <div class=\"figure\">\r\n                ");
            EndContext();
            BeginContext(14881, 142, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "d5cc112f243f4359856d9c16e385847c", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(15023, 641, true);
            WriteLiteral(@"
                <p><small class=""help_caption"">Fig7: REACTOME terms in the pink module.</small></p>
            </div>
            <p>
                It seems clear that both modules share generic terms (e.g. Immune System, Innate Immune System). In addition, there are specific terms for each one of them, i.e. ""Adaptive immune system"" for cyan and
                ""Cytokine signaling in immune system"" for pink.
            </p>
            <p>Other kinds of ""cell type"" searches may include, for instance, PD or dopaminergic neurons. Let's try it with the <b>dopa</b> term:</p>
            <div class=""figure"">
                ");
            EndContext();
            BeginContext(15664, 180, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "3da02eec67c6475da20d347b6d738870", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_26);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_27);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(15844, 559, true);
            WriteLiteral(@"
                <p><small class=""help_caption"">Fig8: Modules in Caudate related with dopaminergic neurons.</small></p>
            </div>
            <p>In this case, we have only obtained three different results matching with the ""dopa"" term. It is important to highlight that, albeit the enrichment p-values 
            may not be highly remarkable, they can be modest p-value signals pointing us to something important.</p>

            <br />

        </div><hr />
        <p><span class=""glyphicon glyphicon-chevron-right""></span><b>Next: </b>");
            EndContext();
            BeginContext(16403, 90, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e2a715621128435daa9d230f3fc06746", async() => {
                BeginContext(16468, 21, true);
                WriteLiteral("Annotating your genes");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Area = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_28.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_28);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(16493, 28, true);
            WriteLiteral("</p>\r\n    </div>\r\n</div>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(16538, 257, true);
                WriteLiteral(@"

    <script type=""text/javascript"">
    $(document).ready(function () {
        // Turn active current menu's option
        $("".nav-item"").find("".active"").removeClass(""active"");
        $(""#tab_help"").addClass(""active"");
    });

    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
